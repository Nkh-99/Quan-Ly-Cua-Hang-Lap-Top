//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLy002
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Quanlybanhang001Entities : DbContext
    {
        public Quanlybanhang001Entities()
            : base("name=Quanlybanhang001Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ChitietHD> ChitietHDs { get; set; }
        public virtual DbSet<Hang> Hangs { get; set; }
        public virtual DbSet<HoaDon> HoaDons { get; set; }
        public virtual DbSet<Khach> Khaches { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<NhaCC> NhaCCs { get; set; }
        public virtual DbSet<NhanVien> NhanViens { get; set; }
        public virtual DbSet<View_VendorsGeneral> View_VendorsGeneral { get; set; }
    
        public virtual int spLoginAccount(string tK, string mK, ObjectParameter loai, ObjectParameter maNV, ObjectParameter result)
        {
            var tKParameter = tK != null ?
                new ObjectParameter("TK", tK) :
                new ObjectParameter("TK", typeof(string));
    
            var mKParameter = mK != null ?
                new ObjectParameter("MK", mK) :
                new ObjectParameter("MK", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spLoginAccount", tKParameter, mKParameter, loai, maNV, result);
        }
    
        public virtual int sp_CreateIDKhach(ObjectParameter result)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateIDKhach", result);
        }
    
        public virtual int sp_CreateMaNV(ObjectParameter result)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateMaNV", result);
        }
    
        public virtual int sp_CreateMaHang(ObjectParameter result)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateMaHang", result);
        }
    
        [DbFunction("Quanlybanhang001Entities", "fn_GetChitietHDByMaHD")]
        public virtual IQueryable<ChitietHD> fn_GetChitietHDByMaHD(string maHD)
        {
            var maHDParameter = maHD != null ?
                new ObjectParameter("MaHD", maHD) :
                new ObjectParameter("MaHD", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ChitietHD>("[Quanlybanhang001Entities].[fn_GetChitietHDByMaHD](@MaHD)", maHDParameter);
        }
    
        public virtual int sp_CreateInvoiceId(ObjectParameter result)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CreateInvoiceId", result);
        }
    
        [DbFunction("Quanlybanhang001Entities", "fn_GetInvoiceById")]
        public virtual IQueryable<HoaDon> fn_GetInvoiceById(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HoaDon>("[Quanlybanhang001Entities].[fn_GetInvoiceById](@Id)", idParameter);
        }
    
        [DbFunction("Quanlybanhang001Entities", "fn_GetItemsById")]
        public virtual IQueryable<Hang> fn_GetItemsById(string maHang)
        {
            var maHangParameter = maHang != null ?
                new ObjectParameter("MaHang", maHang) :
                new ObjectParameter("MaHang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Hang>("[Quanlybanhang001Entities].[fn_GetItemsById](@MaHang)", maHangParameter);
        }
    
        [DbFunction("Quanlybanhang001Entities", "fn_GetKhachById")]
        public virtual IQueryable<Khach> fn_GetKhachById(string maKH)
        {
            var maKHParameter = maKH != null ?
                new ObjectParameter("MaKH", maKH) :
                new ObjectParameter("MaKH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Khach>("[Quanlybanhang001Entities].[fn_GetKhachById](@MaKH)", maKHParameter);
        }
    
        public virtual int sp_DeleteInvoice(string id, ObjectParameter finished)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteInvoice", idParameter, finished);
        }
    
        public virtual ObjectResult<NhaCC> sp_SearchVendor(string vendorName)
        {
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NhaCC>("sp_SearchVendor", vendorNameParameter);
        }
    
        public virtual ObjectResult<NhaCC> sp_SearchVendor(string vendorName, MergeOption mergeOption)
        {
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NhaCC>("sp_SearchVendor", mergeOption, vendorNameParameter);
        }
    
        public virtual ObjectResult<Khach> sp_SearchCustomer(string name, string address, string phone)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Khach>("sp_SearchCustomer", nameParameter, addressParameter, phoneParameter);
        }
    
        public virtual ObjectResult<Khach> sp_SearchCustomer(string name, string address, string phone, MergeOption mergeOption)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Khach>("sp_SearchCustomer", mergeOption, nameParameter, addressParameter, phoneParameter);
        }
    
        public virtual ObjectResult<NhanVien> sp_SearchEmployee(string ten, string gioitinh, string diachi, string dienthoai)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("Ten", ten) :
                new ObjectParameter("Ten", typeof(string));
    
            var gioitinhParameter = gioitinh != null ?
                new ObjectParameter("Gioitinh", gioitinh) :
                new ObjectParameter("Gioitinh", typeof(string));
    
            var diachiParameter = diachi != null ?
                new ObjectParameter("Diachi", diachi) :
                new ObjectParameter("Diachi", typeof(string));
    
            var dienthoaiParameter = dienthoai != null ?
                new ObjectParameter("Dienthoai", dienthoai) :
                new ObjectParameter("Dienthoai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NhanVien>("sp_SearchEmployee", tenParameter, gioitinhParameter, diachiParameter, dienthoaiParameter);
        }
    
        public virtual ObjectResult<NhanVien> sp_SearchEmployee(string ten, string gioitinh, string diachi, string dienthoai, MergeOption mergeOption)
        {
            var tenParameter = ten != null ?
                new ObjectParameter("Ten", ten) :
                new ObjectParameter("Ten", typeof(string));
    
            var gioitinhParameter = gioitinh != null ?
                new ObjectParameter("Gioitinh", gioitinh) :
                new ObjectParameter("Gioitinh", typeof(string));
    
            var diachiParameter = diachi != null ?
                new ObjectParameter("Diachi", diachi) :
                new ObjectParameter("Diachi", typeof(string));
    
            var dienthoaiParameter = dienthoai != null ?
                new ObjectParameter("Dienthoai", dienthoai) :
                new ObjectParameter("Dienthoai", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NhanVien>("sp_SearchEmployee", mergeOption, tenParameter, gioitinhParameter, diachiParameter, dienthoaiParameter);
        }
    
        public virtual ObjectResult<Hang> sp_SearchItems(string tenHang, Nullable<int> maNCC, Nullable<double> soluong, Nullable<double> giaBan, string ghichu)
        {
            var tenHangParameter = tenHang != null ?
                new ObjectParameter("TenHang", tenHang) :
                new ObjectParameter("TenHang", typeof(string));
    
            var maNCCParameter = maNCC.HasValue ?
                new ObjectParameter("MaNCC", maNCC) :
                new ObjectParameter("MaNCC", typeof(int));
    
            var soluongParameter = soluong.HasValue ?
                new ObjectParameter("Soluong", soluong) :
                new ObjectParameter("Soluong", typeof(double));
    
            var giaBanParameter = giaBan.HasValue ?
                new ObjectParameter("GiaBan", giaBan) :
                new ObjectParameter("GiaBan", typeof(double));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("Ghichu", ghichu) :
                new ObjectParameter("Ghichu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hang>("sp_SearchItems", tenHangParameter, maNCCParameter, soluongParameter, giaBanParameter, ghichuParameter);
        }
    
        public virtual ObjectResult<Hang> sp_SearchItems(string tenHang, Nullable<int> maNCC, Nullable<double> soluong, Nullable<double> giaBan, string ghichu, MergeOption mergeOption)
        {
            var tenHangParameter = tenHang != null ?
                new ObjectParameter("TenHang", tenHang) :
                new ObjectParameter("TenHang", typeof(string));
    
            var maNCCParameter = maNCC.HasValue ?
                new ObjectParameter("MaNCC", maNCC) :
                new ObjectParameter("MaNCC", typeof(int));
    
            var soluongParameter = soluong.HasValue ?
                new ObjectParameter("Soluong", soluong) :
                new ObjectParameter("Soluong", typeof(double));
    
            var giaBanParameter = giaBan.HasValue ?
                new ObjectParameter("GiaBan", giaBan) :
                new ObjectParameter("GiaBan", typeof(double));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("Ghichu", ghichu) :
                new ObjectParameter("Ghichu", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Hang>("sp_SearchItems", mergeOption, tenHangParameter, maNCCParameter, soluongParameter, giaBanParameter, ghichuParameter);
        }
    
        public virtual ObjectResult<HoaDon> sp_SearchInvoice(string maHD, string maNV, string maKH, Nullable<int> month, Nullable<int> year, Nullable<double> tongtien)
        {
            var maHDParameter = maHD != null ?
                new ObjectParameter("MaHD", maHD) :
                new ObjectParameter("MaHD", typeof(string));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var maKHParameter = maKH != null ?
                new ObjectParameter("MaKH", maKH) :
                new ObjectParameter("MaKH", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var tongtienParameter = tongtien.HasValue ?
                new ObjectParameter("Tongtien", tongtien) :
                new ObjectParameter("Tongtien", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HoaDon>("sp_SearchInvoice", maHDParameter, maNVParameter, maKHParameter, monthParameter, yearParameter, tongtienParameter);
        }
    
        public virtual ObjectResult<HoaDon> sp_SearchInvoice(string maHD, string maNV, string maKH, Nullable<int> month, Nullable<int> year, Nullable<double> tongtien, MergeOption mergeOption)
        {
            var maHDParameter = maHD != null ?
                new ObjectParameter("MaHD", maHD) :
                new ObjectParameter("MaHD", typeof(string));
    
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            var maKHParameter = maKH != null ?
                new ObjectParameter("MaKH", maKH) :
                new ObjectParameter("MaKH", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var tongtienParameter = tongtien.HasValue ?
                new ObjectParameter("Tongtien", tongtien) :
                new ObjectParameter("Tongtien", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<HoaDon>("sp_SearchInvoice", mergeOption, maHDParameter, maNVParameter, maKHParameter, monthParameter, yearParameter, tongtienParameter);
        }
    
        public virtual int sp_GetUserByEmployeeId(string maNV, ObjectParameter result)
        {
            var maNVParameter = maNV != null ?
                new ObjectParameter("MaNV", maNV) :
                new ObjectParameter("MaNV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GetUserByEmployeeId", maNVParameter, result);
        }
    
        public virtual int sp_ChangePassword(string user, string pass)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("Pass", pass) :
                new ObjectParameter("Pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChangePassword", userParameter, passParameter);
        }
    
        [DbFunction("Quanlybanhang001Entities", "fn_GetInvoiceByEmployeeId")]
        public virtual IQueryable<HoaDon> fn_GetInvoiceByEmployeeId(string employeeId)
        {
            var employeeIdParameter = employeeId != null ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<HoaDon>("[Quanlybanhang001Entities].[fn_GetInvoiceByEmployeeId](@EmployeeId)", employeeIdParameter);
        }
    }
}
